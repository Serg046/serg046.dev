name: Production Deployment
on:
  push:
    branches: [master]
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: Serg046
          password: ${{ secrets.GIT_HUB_TOKEN }}
          
      - name: Inject GH secret
        env:
          GIT_HUB_TOKEN: ${{ secrets.GIT_HUB_TOKEN }}
        run: perl -pi -e 's/\"GitHubToken\"\:\s\"\"/\"GitHubToken\"\:\"$ENV{GIT_HUB_TOKEN}\"/' Server/appsettings.json
    
      - name: Create kube config
        run: |
          KUBECONFIG=$(mktemp -d)/config
          base64 -d <(printf "%s" $KUBE_CONFIG_BASE64_DATA) > $KUBECONFIG
          echo KUBECONFIG=$KUBECONFIG >> $GITHUB_ENV
        env:
          KUBE_CONFIG_BASE64_DATA: ${{ secrets.KUBE_CONFIG_BASE64_DATA }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ghcr.io/serg046-app
          
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ghcr.io/serg046-app
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Install werf
        uses: werf/actions/install@v2
      
      - name: Run script
        run: |
          . $(werf ci-env github --as-file) 
          werf converge --platform linux/arm64 --dev --verbose
        env:
          GITHUB_TOKEN: ${{ github.token }}
          WERF_ENV: production
